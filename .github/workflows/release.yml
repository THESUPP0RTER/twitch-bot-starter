name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run full test suite
        run: |
          npm run build
          npm test
        env:
          BOT_USERNAME: test_bot
          OAUTH_TOKEN: mock_token
          CHANNELS: test_channel

      - name: Validate package.json version
        run: |
          PACKAGE_VERSION="v$(node -p "require('./package.json').version")"
          if [ "$PACKAGE_VERSION" != "${{ steps.version.outputs.version }}" ]; then
            echo "Version mismatch: package.json has $PACKAGE_VERSION but releasing ${{ steps.version.outputs.version }}"
            exit 1
          fi

  build-release:
    name: Build Release Assets
    runs-on: ubuntu-latest
    needs: validate-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --omit=dev

      - name: Build project
        run: npm run build

      - name: Create release archive
        run: |
          mkdir -p release-assets
          tar -czf release-assets/twitch-bot-starter-${{ needs.validate-release.outputs.version }}.tar.gz \
            dist/ \
            package.json \
            package-lock.json \
            LICENSE \
            README.md \
            docker-compose.yml

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: release-assets/
          retention-days: 90

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [validate-release, build-release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for changelog

      - name: Download release assets
        uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: release-assets/

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "## Changes since $PREVIOUS_TAG" > CHANGELOG.md
            git log --pretty=format:"- %s (%h)" "$PREVIOUS_TAG"..HEAD >> CHANGELOG.md
          else
            echo "## Initial Release" > CHANGELOG.md
            echo "This is the first release of the Twitch Bot Starter." >> CHANGELOG.md
          fi
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.validate-release.outputs.version }}
          name: Release ${{ needs.validate-release.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          files: release-assets/*
          draft: false
          prerelease: ${{ contains(needs.validate-release.outputs.version, '-') }}
          generate_release_notes: true

